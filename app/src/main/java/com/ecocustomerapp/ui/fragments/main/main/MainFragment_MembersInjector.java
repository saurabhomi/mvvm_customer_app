// Generated by Dagger (https://dagger.dev).
package com.ecocustomerapp.ui.fragments.main.main;

import com.ecocustomerapp.ui.base.BaseFragment_MembersInjector;
import dagger.MembersInjector;
import dagger.internal.InjectedFieldSignature;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class MainFragment_MembersInjector implements MembersInjector<MainFragment> {
  private final Provider<MainFragmentViewModel> mViewModelProvider;

  private final Provider<MainPagerAdapter> mPagerAdapterProvider;

  public MainFragment_MembersInjector(Provider<MainFragmentViewModel> mViewModelProvider,
      Provider<MainPagerAdapter> mPagerAdapterProvider) {
    this.mViewModelProvider = mViewModelProvider;
    this.mPagerAdapterProvider = mPagerAdapterProvider;
  }

  public static MembersInjector<MainFragment> create(
      Provider<MainFragmentViewModel> mViewModelProvider,
      Provider<MainPagerAdapter> mPagerAdapterProvider) {
    return new MainFragment_MembersInjector(mViewModelProvider, mPagerAdapterProvider);}

  @Override
  public void injectMembers(MainFragment instance) {
    BaseFragment_MembersInjector.injectMViewModel(instance, mViewModelProvider.get());
    injectMPagerAdapter(instance, mPagerAdapterProvider.get());
  }

  @InjectedFieldSignature("com.ecocustomerapp.ui.fragments.main.main.MainFragment.mPagerAdapter")
  public static void injectMPagerAdapter(MainFragment instance, MainPagerAdapter mPagerAdapter) {
    instance.mPagerAdapter = mPagerAdapter;
  }
}
